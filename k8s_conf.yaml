apiVersion: v1
kind: Namespace
metadata:
  name: nf-etl
  labels:
    env: development

---
# Deployment for RabbitMQ
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    service: rabbitmq
  name: rabbitmq
  namespace: nf-etl
spec:
  replicas: 1
  selector:
    matchLabels:
      service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        network/kube-nf-etl-net: "true"
        service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              value: guest
            - name: RABBITMQ_DEFAULT_USER
              value: guest
          image: rabbitmq:3-management-alpine
          name: rabbitmq
          ports:
            - containerPort: 5672
            - containerPort: 15672
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-data
            - mountPath: /var/log/rabbitmq
              name: rabbitmq-logs
      restartPolicy: Always
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
        - name: rabbitmq-logs
          persistentVolumeClaim:
            claimName: rabbitmq-logs
status: {}
      
---
# Service to expose the ports to the control plane
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    service: rabbitmq
  name: rabbitmq
  namespace: nf-etl
spec:
  ports:
    - name: "5672"
      port: 5672
      targetPort: 5672
      protocol: TCP
    - name: "15672"
      port: 15672
      targetPort: 15672
      protocol: TCP
  selector:
    service: rabbitmq
  type: LoadBalancer
# status:
#   loadBalancer: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    service: rabbitmq-data
  name: rabbitmq-data
  namespace: nf-etl
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    service: rabbitmq-logs
  name: rabbitmq-logs
  namespace: nf-etl
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
# Redis
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    service: redis
  name: redis
  namespace: nf-etl
spec:
  replicas: 1
  selector:
    matchLabels:
      service: redis
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        network/kube-nf-etl-net: "true"
        service: redis
    spec:
      containers:
        - image: redis:latest
          name: redis
          ports:
            - containerPort: 6379
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    service: redis
  name: redis
  namespace: nf-etl
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    service: redis
  type: LoadBalancer
# status:
#   loadBalancer: {}

---
# Network Policy - Pods vs external traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: kube-nf-etl-net
  namespace: nf-etl
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              network/kube-nf-etl-net: "true"
  podSelector:
    matchLabels:
      network/kube-nf-etl-net: "true"

